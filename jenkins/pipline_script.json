pipeline {
    environment {
        // Docker Hub 인증 정보 설정a
        dockerImage = 'attnk_t'
        dockerRegistry = 'hippotnc'
        containerName='attnk_t_flask'
    }
    agent any
    stages {
        stage('GIT CLONE') {
            steps {
                git branch : 'dev',
                credentialsId:'git',
                url:' https://github.com/hippotnc-skku/AttnKare-T_Backend.git'
            }    
            post{
                failure{
                    error 'Fail Git Clone'
                }
            }
        }
     
        stage('Docker Image Build') {
            steps {
                sh 'docker build -t ${dockerRegistry}/${dockerImage}:latest .'
        }
        post{
            failure{
                error 'Fail Image Build'
            }
        }
    }
    stage('Stop and Remove Docker Container') {
        steps {
            script {
                def isRunning = sh(
                    script: 'docker ps -q --filter name=${containerName}',
                    returnStdout: true
                ).trim()
    
                if (!isRunning.empty) {
                    sh "docker stop ${containerName}"
                    sh "docker rm ${containerName}"
                }
            }
        }
    }
    
    stage('Run Docker Container') {
        steps {
            sh 'docker run -d --name ${containerName} -p  4009:4009 ${dockerRegistry}/${dockerImage}:latest'
        }
    }
        stage('Docker Image push') {
   
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) 
                {
                    sh 'docker login -u ${USERNAME} -p ${PASSWORD}'
                    sh 'docker push ${dockerRegistry}/${dockerImage}:latest'}
         }
         post{
            failure{
                error 'Fail  Image Push'
            }
        }
    }
}
}